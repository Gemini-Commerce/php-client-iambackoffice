<?php
/**
 * IamBackofficeApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  GeminiCommerce\Iambackoffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * IamBackoffice Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace GeminiCommerce\Iambackoffice\Test\Api;

use \GeminiCommerce\Iambackoffice\Configuration;
use \GeminiCommerce\Iambackoffice\ApiException;
use \GeminiCommerce\Iambackoffice\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * IamBackofficeApiTest Class Doc Comment
 *
 * @category Class
 * @package  GeminiCommerce\Iambackoffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class IamBackofficeApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for iamBackofficeAssignRoles
     *
     * AUTHZ.
     *
     */
    public function testIamBackofficeAssignRoles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeCreateGroup
     *
     * GROUPS.
     *
     */
    public function testIamBackofficeCreateGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeDisableUserMfa
     *
     * .
     *
     */
    public function testIamBackofficeDisableUserMfa()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeEnableUserMfa
     *
     * .
     *
     */
    public function testIamBackofficeEnableUserMfa()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeGenerateSecretForQR
     *
     * MFA.
     *
     */
    public function testIamBackofficeGenerateSecretForQR()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeLogin
     *
     * LOGIN.
     *
     */
    public function testIamBackofficeLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeLoginMfa
     *
     * LOGIN MFA.
     *
     */
    public function testIamBackofficeLoginMfa()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeLogout
     *
     * .
     *
     */
    public function testIamBackofficeLogout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeRegister
     *
     * REGISTRATION.
     *
     */
    public function testIamBackofficeRegister()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeRegisterAgent
     *
     * AGENTS.
     *
     */
    public function testIamBackofficeRegisterAgent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for iamBackofficeUnassignRoles
     *
     * .
     *
     */
    public function testIamBackofficeUnassignRoles()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
